[
    {
        "name": "AlexNet",
        "dataset_name": [
            "https://www.dropbox.com/scl/fi/30dlbblp7wytcvoy05col/report_train.npy?rlkey=jx100qoz5n1d654v2mi32i9aj&dl=1",
            "https://www.dropbox.com/scl/fi/oo6g1yqhbjm22wffeddgv/report_val.npy?rlkey=9rqe0rucjhrbzv3x7xbs5047z&dl=1"
        ],
        "train_losses": [
            1.8064135655760765,
            1.331108235567808,
            1.140192300826311,
            0.9219191890209913,
            0.8344874136149883,
            0.6427375171333551,
            0.6244310937821865,
            0.5691455885767936,
            0.4613158758729696,
            0.6258918300271035,
            0.48592358119785783,
            0.6246409075334668,
            0.5923412647098303,
            0.4182818409986794,
            0.3753650551661849,
            0.4009393844753504,
            0.4521517621353269,
            0.4345008138567209,
            0.34471290903165935,
            0.42548321541398765,
            0.2666153027676046,
            0.2565796700771898,
            0.24531500609591603,
            0.4138467313721776,
            0.3310639996547252,
            0.2919215884176083,
            0.39088265378959475,
            0.3216284949798137,
            0.22570242336951196,
            0.30226992326788604
        ],
        "val_losses": [
            1.6770428889676143,
            1.2801406979560852,
            1.0883352160453796,
            0.7346422138967013,
            0.7313122866969359,
            0.670030773862412,
            0.7915196967752356,
            0.6427532426620785,
            1.4212458678276132,
            0.8669970851195486,
            0.6270082036131307,
            0.6513097568562156,
            0.7602574895871314,
            0.5661753366064084,
            0.6390944103661337,
            0.8570294756638376,
            0.9439167137208738,
            0.5515932503499483,
            0.6834703140745038,
            0.5372143215254733,
            0.571847068636041,
            0.6312861003373799,
            0.6320830301234597,
            0.6115024489791769,
            0.615801944152305,
            0.5962856262922287,
            0.5579726676407614,
            0.4623138990841414,
            0.5611996046806637,
            0.5597035565266484
        ],
        "train_accuracies": [
            22.58823529411765,
            44.98039215686274,
            54.03921568627451,
            64.94117647058823,
            69.96078431372548,
            75.37254901960785,
            76.62745098039215,
            78.86274509803921,
            82.86274509803921,
            78.94117647058823,
            81.92156862745098,
            76.90196078431373,
            79.41176470588235,
            84.94117647058823,
            86.90196078431373,
            86.58823529411765,
            84.11764705882354,
            84.31372549019608,
            87.33333333333333,
            84.19607843137256,
            89.96078431372548,
            90.58823529411765,
            91.25490196078431,
            85.68627450980392,
            89.13725490196079,
            90.15686274509804,
            86.98039215686275,
            88.98039215686275,
            91.72549019607843,
            90.27450980392157
        ],
        "val_accuracies": [
            29.0,
            47.0,
            59.666666666666664,
            71.5,
            72.5,
            73.16666666666667,
            70.0,
            76.0,
            63.5,
            64.5,
            77.0,
            78.5,
            73.5,
            76.33333333333333,
            79.0,
            73.16666666666667,
            72.5,
            79.5,
            78.66666666666667,
            79.83333333333333,
            80.16666666666667,
            80.66666666666667,
            80.0,
            78.0,
            78.83333333333333,
            83.33333333333333,
            81.0,
            81.5,
            81.0,
            81.83333333333333
        ],
        "traning_times": [
            "2023-11-19 08:06:42.669452",
            "2023-11-19 08:06:46.474467",
            "2023-11-19 08:06:50.978866",
            "2023-11-19 08:06:54.635422",
            "2023-11-19 08:06:58.135725",
            "2023-11-19 08:07:02.297280",
            "2023-11-19 08:07:05.147533",
            "2023-11-19 08:07:08.677654",
            "2023-11-19 08:07:11.435675",
            "2023-11-19 08:07:14.196651",
            "2023-11-19 08:07:17.895757",
            "2023-11-19 08:07:21.724896",
            "2023-11-19 08:07:24.549459",
            "2023-11-19 08:07:27.303216",
            "2023-11-19 08:07:30.911387",
            "2023-11-19 08:07:33.661879",
            "2023-11-19 08:07:36.543572",
            "2023-11-19 08:07:40.343003",
            "2023-11-19 08:07:43.108247",
            "2023-11-19 08:07:46.570239",
            "2023-11-19 08:07:50.054500",
            "2023-11-19 08:07:54.405882",
            "2023-11-19 08:07:57.272104",
            "2023-11-19 08:08:00.481582",
            "2023-11-19 08:08:03.351447",
            "2023-11-19 08:08:06.841623",
            "2023-11-19 08:08:09.675379",
            "2023-11-19 08:08:12.531940",
            "2023-11-19 08:08:15.354835",
            "2023-11-19 08:08:18.161766"
        ],
        "model": "AlexNet(\n  (features): Sequential(\n    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))\n    (1): ReLU(inplace=True)\n    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n    (4): ReLU(inplace=True)\n    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (7): ReLU(inplace=True)\n    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (9): ReLU(inplace=True)\n    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (11): ReLU(inplace=True)\n    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))\n  (classifier): Sequential(\n    (0): Dropout(p=0.5, inplace=False)\n    (1): Linear(in_features=9216, out_features=4096, bias=True)\n    (2): ReLU(inplace=True)\n    (3): Dropout(p=0.5, inplace=False)\n    (4): Linear(in_features=4096, out_features=4096, bias=True)\n    (5): ReLU(inplace=True)\n    (6): Linear(in_features=4096, out_features=6, bias=True)\n  )\n)",
        "test_data": [
            "https://raw.githubusercontent.com/TacoXDD/homeworks/master/dataset/test/test_normal.npy",
            "https://raw.githubusercontent.com/TacoXDD/homeworks/master/dataset/test/test_pneumonia.npy"
        ],
        "test_avg_loss": 0.542589501330727,
        "test_accuracy": 85.0
    }
]