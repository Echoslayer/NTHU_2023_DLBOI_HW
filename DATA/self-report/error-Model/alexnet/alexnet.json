[
    {
        "name": "alexnet",
        "dataset_name": [
            "https://www.dropbox.com/scl/fi/30dlbblp7wytcvoy05col/report_train.npy?rlkey=jx100qoz5n1d654v2mi32i9aj&dl=1",
            "https://www.dropbox.com/scl/fi/oo6g1yqhbjm22wffeddgv/report_val.npy?rlkey=9rqe0rucjhrbzv3x7xbs5047z&dl=1"
        ],
        "train_losses": [
            1.7425529211759567,
            1.5083744943141937,
            1.2234282448887825,
            1.1678187288343906,
            1.0314574472606182,
            0.9973629236221313,
            1.0204881198704243,
            0.9761441566050053,
            0.8805781222879887,
            0.7867345992475748,
            0.8681514460593462,
            0.7308813706040382,
            0.7798204079270363,
            0.7633737929165363,
            0.9418561581522227,
            0.7689584169536829,
            0.6972587712109088,
            0.6747638992965221,
            0.6778974406421184,
            0.6680346535518765,
            0.5851476274430751,
            0.6372447874397039,
            0.5481999495066703,
            0.5982735950499773,
            0.5593027494847774,
            0.5159914148971438,
            0.47630057744681836,
            1.0977683717384934,
            0.8161332581192255,
            0.6842675123363733
        ],
        "val_losses": [
            1.340136352338289,
            1.3340041135486804,
            1.1936037195356268,
            1.0841643120113171,
            1.0807662135676335,
            1.2486900436250787,
            1.141167443833853,
            1.120037919596622,
            0.8978726777591204,
            0.9468694752768466,
            1.0030744326742072,
            0.9098259759576697,
            0.8939229500921149,
            0.8096495419740677,
            0.8520224517897556,
            0.7881981722618404,
            0.8848900512645119,
            0.9010882738389467,
            0.8530620995320772,
            0.875366327009703,
            1.3057277610427456,
            0.7959148789706983,
            0.7789328608073687,
            1.0813456263981367,
            0.7707850203702324,
            0.8547067893178839,
            0.9342349818662593,
            1.0225514769554138,
            1.261792910726447,
            1.143630704597423
        ],
        "train_accuracies": [
            27.215686274509803,
            32.3921568627451,
            45.6078431372549,
            48.31372549019608,
            57.1764705882353,
            58.470588235294116,
            56.8235294117647,
            60.19607843137255,
            64.66666666666667,
            68.0,
            64.58823529411765,
            67.2156862745098,
            67.29411764705883,
            69.6470588235294,
            61.76470588235294,
            69.45098039215686,
            71.88235294117646,
            71.96078431372548,
            72.70588235294117,
            72.62745098039215,
            78.31372549019608,
            74.23529411764706,
            78.86274509803921,
            77.84313725490196,
            78.50980392156863,
            80.19607843137256,
            80.82352941176471,
            58.549019607843135,
            68.50980392156863,
            73.09803921568627
        ],
        "val_accuracies": [
            38.666666666666664,
            34.166666666666664,
            46.0,
            56.5,
            57.833333333333336,
            49.166666666666664,
            53.666666666666664,
            54.5,
            61.0,
            60.0,
            57.666666666666664,
            62.833333333333336,
            71.5,
            68.16666666666667,
            65.5,
            70.0,
            63.0,
            62.0,
            65.16666666666667,
            67.66666666666667,
            67.83333333333333,
            73.0,
            71.0,
            57.333333333333336,
            71.0,
            67.83333333333333,
            73.16666666666667,
            58.0,
            54.666666666666664,
            71.83333333333333
        ],
        "traning_times": [
            "2023-12-03 07:30:47.674013",
            "2023-12-03 07:30:50.484645",
            "2023-12-03 07:30:53.904375",
            "2023-12-03 07:30:57.365488",
            "2023-12-03 07:31:02.136051",
            "2023-12-03 07:31:05.030995",
            "2023-12-03 07:31:07.740982",
            "2023-12-03 07:31:10.489119",
            "2023-12-03 07:31:14.004601",
            "2023-12-03 07:31:17.231470",
            "2023-12-03 07:31:20.107259",
            "2023-12-03 07:31:23.563681",
            "2023-12-03 07:31:28.262311",
            "2023-12-03 07:31:31.111676",
            "2023-12-03 07:31:33.972781",
            "2023-12-03 07:31:36.967800",
            "2023-12-03 07:31:39.709045",
            "2023-12-03 07:31:42.433181",
            "2023-12-03 07:31:45.205569",
            "2023-12-03 07:31:48.003647",
            "2023-12-03 07:31:50.898299",
            "2023-12-03 07:31:54.464627",
            "2023-12-03 07:31:57.225314",
            "2023-12-03 07:31:59.962334",
            "2023-12-03 07:32:02.688064",
            "2023-12-03 07:32:05.634079",
            "2023-12-03 07:32:09.729314",
            "2023-12-03 07:32:12.477988",
            "2023-12-03 07:32:15.229635",
            "2023-12-03 07:32:18.020770"
        ],
        "model": "AlexNet(\n  (features): Sequential(\n    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))\n    (1): ReLU(inplace=True)\n    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\n    (4): ReLU(inplace=True)\n    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (7): ReLU(inplace=True)\n    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (9): ReLU(inplace=True)\n    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\n    (11): ReLU(inplace=True)\n    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\n  )\n  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))\n  (classifier): Sequential(\n    (0): Dropout(p=0.5, inplace=False)\n    (1): Linear(in_features=9216, out_features=4096, bias=True)\n    (2): ReLU(inplace=True)\n    (3): Dropout(p=0.5, inplace=False)\n    (4): Linear(in_features=4096, out_features=4096, bias=True)\n    (5): ReLU(inplace=True)\n    (6): Linear(in_features=4096, out_features=6, bias=True)\n  )\n)",
        "test_data": [
            "https://raw.githubusercontent.com/TacoXDD/homeworks/master/dataset/test/test_normal.npy",
            "https://raw.githubusercontent.com/TacoXDD/homeworks/master/dataset/test/test_pneumonia.npy"
        ],
        "test_avg_loss": 0.7526914779292909,
        "test_accuracy": 72.66666666666667
    }
]